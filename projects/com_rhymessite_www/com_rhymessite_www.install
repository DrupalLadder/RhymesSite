<?php
/**
 * @file
 *
 */


/**
 * Implements hook_install().
 */
function com_rhymessite_www_install() {

  // Save page node with info about site.
  $node = new stdClass();
  $node->title = st('About');
  $node->type = 'page';
  $node->body['und'][0]['value'] = rhymesdistro_get_about_content();
  $node->body['und'][0]['format'] = 'filtered_html';
  node_save($node);

  // Set /rhymes to front page.
  variable_set('site_frontpage', 'node/1');

  // Install rhymevideo so we can save some example content in the content type
  // it provides.
  module_enable(array('rhymevideo'));
  // Get list of demo content YouTube videos.
  $videos = rhymesdistro_get_core_videos();
  // Save videos ash rhymevideo nodes.
  rhymesdistro_save_core_rhymevideos($videos);

  // Create menu items for rhymes distro.
  $items = array();
  // Create a Home link in the main menu.
  $items[] = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
    'weight' => 0,
  );
  // Rhymes points to /rhymes provided by contrib rhymes module.
  $items[] = array(
    'link_title' => st('Rhymes'),
    'link_path' => 'rhymes',
    'menu_name' => 'main-menu',
    'weight' => 1,
  );
  // Create menu links.
  foreach ($items as $item) {
    menu_link_save($item);
  }
  // Update the menu router information.
  menu_rebuild();
}

/**
 * Saves demo rhymevideo nodes.
 *
 * @param array $videos
 *   Array of YouTube videos to save as nodes.
 */
function rhymesdistro_save_core_rhymevideos($videos) {
  foreach ($videos as $video) {
    $title = $video['title'];
    $url = $video['url'];
    $video_id = substr($url, strpos($url, '=')+1);

    $node = new stdClass();
    $node->title = $title;
    $node->type = 'rhymevideo';
    $node->field_youtube_url['und'][0]['input'] = $url;
    $node->field_youtube_url['und'][0]['video_id'] = $video_id;
    node_save($node);
  }
}


/**
 * Return a list of videos to be stored as rhymevideo nodes.
 *
 * @return array
 *   Array of videos to be saved as rhymevideo nodes.
 */
function rhymesdistro_get_core_videos() {
  $videos = array(
    array(
      'title' => 'Famous Nursery Rhymes Collection',
      'url' => 'https://www.youtube.com/watch?v=Pz1Y33VT4Rs',
    ),
    array(
      'title' => 'Old Mother Hubbard ',
      'url' => 'https://www.youtube.com/watch?v=rdmzoGCoQOQ',
    ),
    array(
      'title' => 'One Fish Two Fish',
      'url' => 'https://www.youtube.com/watch?v=SCWaAGvtvs4',
    ),
  );

  return $videos;
}

/**
 * @return string
 *   HTML for page node. About page with info about site/distro.
 */
function rhymesdistro_get_about_content() {

  $html = <<<EOF
This is a demo site for demonstrating Git workflows.

GitBook with tutorials:
https://github.com/drupalladder/gitworkflow

Example site code base for basic site setup and site developer tutorials:
https://github.com/drupalladder/_rhymessite

Example code for advanced tutorials on maintaining contrib projects developed
inside site repos and working with Build Manager and Drush Subtree:
https://github.com/drupalladder/rhymes
https://github.com/drupalladder/rhymesdistro

Related Drush Extensions for advanced tutorials:
https://github.com/whitehouse/drushsubtree
https://github.com/whitehouse/buildmanager
EOF;

  return $html;
}
